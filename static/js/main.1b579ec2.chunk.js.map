{"version":3,"sources":["Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","_ref","tabs","selectedTab","handleSelected","_jsxs","_Fragment","children","_jsx","className","map","tab","classNames","id","Link","to","concat","onClick","title","content","App","_useState","useState","_useState2","_slicedToArray","setSelectedTab","_useState3","_useState4","selectedPage","setSelectedPage","handleSelectedTab","handleSelectedPage","key","Routes","Route","path","element","index","ReactDOM","render","HashRouter","document","getElementById"],"mappings":"gQAWaA,EAAwB,SAAHC,GAI3B,IAHLC,EAAID,EAAJC,KACAC,EAAWF,EAAXE,YACAC,EAAcH,EAAdG,eAEA,OACEC,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAAA,MAAIC,UAAU,QAAOF,SAAC,cACtBC,cAAA,OAAKC,UAAU,gBAAeF,SAC5BC,cAAA,MAAAD,SACGL,EAAKQ,KAAI,SAAAC,GAAG,OACXH,cAAA,MAEE,UAAQ,MACRC,UAAWG,IAAW,CACpB,aAAwB,OAAXT,QAAW,IAAXA,OAAW,EAAXA,EAAaU,MAAOF,EAAIE,KACpCN,SAEHC,cAACM,IAAI,CACHC,GAAE,SAAAC,OAAWL,EAAIE,IACjBI,QAAS,kBAAMb,EAAeO,IAAKJ,SAElCI,EAAIO,SAVFP,EAAIE,WAgBjBL,cAAA,OAAKC,UAAU,QAAQ,UAAQ,aAAYF,SACvCJ,EACEA,EAAYgB,QACZ,4BC/BNjB,EAAc,CAClB,CAAEW,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,IAAAC,EAAsCC,mBAAqB,MAAKC,EAAAC,YAAAH,EAAA,GAAzDlB,EAAWoB,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAwCJ,mBAAiB,UAASK,EAAAH,YAAAE,EAAA,GAA3DE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAG9BG,EAAoB,SAACnB,GACzBc,EAAed,IAGXoB,EAAqB,SAACC,GAC1BH,EAAgBG,IAGlB,OACE3B,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAAA,OACEC,UAAU,oDACV,UAAQ,MAAKF,SAEbC,cAAA,OAAKC,UAAU,YAAWF,SACxBF,eAAA,OAAKI,UAAU,eAAcF,SAAA,CAC3BC,cAACM,IAAI,CAEHC,GAAG,IACHN,UAAWG,IACT,cAAe,CAAE,YAA8B,WAAjBgB,IAEhCX,QAAS,kBAAMc,EAAmB,WAAUxB,SAC7C,QANK,UASNC,cAACM,IAAI,CAEHC,GAAG,OACHN,UAAWG,IACT,cAAe,CAAE,YAA8B,WAAjBgB,IAEhCX,QAAS,kBAAMc,EAAmB,WAAUxB,SAC7C,QANK,iBAaZC,cAAA,OAAKC,UAAU,UAASF,SACtBC,cAAA,OAAKC,UAAU,YAAWF,SACxBF,eAAC4B,IAAM,CAAA1B,SAAA,CACLC,cAAC0B,IAAK,CACJC,KAAK,IACLC,QAAS5B,cAAA,MAAIC,UAAU,QAAOF,SAAC,qBAEjCC,cAAC0B,IAAK,CACJC,KAAK,IACLC,QAAS5B,cAAA,MAAIC,UAAU,QAAOF,SAAC,gBAEjCF,eAAC6B,IAAK,CAACC,KAAK,OAAM5B,SAAA,CAChBC,cAAC0B,IAAK,CACJG,OAAK,EACLD,QACE5B,cAACR,EAAI,CACHE,KAAMA,EACNC,YAAaA,EACbC,eAAgB0B,MAItBtB,cAAC0B,IAAK,CACJC,KAAK,SACLC,QACE5B,cAACR,EAAI,CACHE,KAAMA,EACNC,YAAaA,EACbC,eAAgB0B,oBCtFpCQ,IAASC,OACP/B,cAACgC,IAAU,CAAAjC,SACTC,cAACY,EAAG,MAENqB,SAASC,eAAe,W","file":"static/js/main.1b579ec2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[]\n  selectedTab: Tab | null\n  handleSelected: (tab: Tab) => void\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTab,\n  handleSelected,\n}) => {\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={classNames({\n                'is-active': selectedTab?.id === tab.id,\n              })}\n            >\n              <Link\n                to={`/tabs/${tab.id}`}\n                onClick={() => handleSelected(tab)}\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        { selectedTab\n          ? selectedTab.content\n          : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport {\n  Link, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tabs } from './Tabs/Tabs';\nimport { Tab } from './types/Tab';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState<Tab | null>(null);\n  const [selectedPage, setSelectedPage] = useState<string>('page-1');\n  // const { tabId = 0 } = useParams();\n\n  const handleSelectedTab = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  const handleSelectedPage = (key: string) => {\n    setSelectedPage(key);\n  };\n\n  return (\n    <>\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link\n              key=\"page-1\"\n              to=\"/\"\n              className={classNames(\n                'navbar-item', { 'is-active': selectedPage === 'page-1' },\n              )}\n              onClick={() => handleSelectedPage('page-1')}\n            >\n              Home\n            </Link>\n            <Link\n              key=\"page-2\"\n              to=\"tabs\"\n              className={classNames(\n                'navbar-item', { 'is-active': selectedPage === 'page-2' },\n              )}\n              onClick={() => handleSelectedPage('page-2')}\n            >\n              Tabs\n            </Link>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home page</h1>}\n            />\n            <Route path=\"tabs\">\n              <Route\n                index\n                element={(\n                  <Tabs\n                    tabs={tabs}\n                    selectedTab={selectedTab}\n                    handleSelected={handleSelectedTab}\n                  />\n                )}\n              />\n              <Route\n                path=\":tabId\"\n                element={(\n                  <Tabs\n                    tabs={tabs}\n                    selectedTab={selectedTab}\n                    handleSelected={handleSelectedTab}\n                  />\n                )}\n              />\n            </Route>\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}